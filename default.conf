proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=prerendercloud_cache:10m max_size=100m inactive=60m use_temp_path=off;

server {
    set $root /usr/share/nginx/html;
    # set $prerendercloud_token YOUR_SECRET_API_TOKEN_HERE;

    listen 80;
    server_name localhost;

    location / {
        root $root;
        try_files $uri @prerendercloud;
    }

    location @prerendercloud {
        root $root;
        # proxy_set_header X-Prerender-Token $prerendercloud_token;

        proxy_cache prerendercloud_cache;
        # cache prerendercloud results for 5m
        proxy_cache_valid 200 5m;

        # don't let rate limiting or server errors interrupt a request
        proxy_intercept_errors on;
        error_page 429 500 502 503 504 =200 /index.html;

        # serve stale while updating cache (after 1st req)
        # see http://serverfault.com/questions/576402/nginx-serving-stale-cache-response-while-updating
        proxy_cache_use_stale updating;

        set $prerender 0;

        # only forward if the path has an extension and that extension is not html
        if ($uri ~ "^(([^.]|\.html?)+)$") {
            set $prerender 1;
        }

        # don't forward to service.prerender.cloud if the prerender user agent is retrieving the page
        if ($http_user_agent ~ "prerendercloud") {
            set $prerender 0;
        }

        if ($prerender = 1) {
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass https://service.prerender.cloud;
        }

        # forces non-existent files (404s) to load index.html (single page apps)
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }
    }

}